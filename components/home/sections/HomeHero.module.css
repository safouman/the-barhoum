.hero {
    position: relative;
    isolation: isolate;
    overflow: hidden;
    background-color: var(--color-background);
    color: var(--color-text);
    min-height: 90vh;
}

.container {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: "text";
    min-height: inherit;
    align-items: center;
    gap: clamp(24px, 5vw, 40px);
    padding-inline: clamp(1rem, 6vw, 4rem);
    height: 94vh;
}

.containerRtl {
}
.containerLtr {
}

@media (min-width: 768px) {
    .containerLtr {
        justify-items: end;
        padding-right: min(45vw, 720px);
        padding-left: clamp(1rem, 6vw, 4rem);
    }
    .containerRtl {
        justify-items: start;
        padding-left: min(45vw, 720px);
        padding-right: clamp(1rem, 6vw, 4rem);
    }
}

.text {
    position: relative;
    z-index: 10;
    display: flex;
    grid-area: text;
    align-self: center;
    max-width: 65ch;
    flex-direction: column;
    gap: clamp(24px, 5vw, 40px);
}

.textRtl {
    text-align: right;
}
.textLtr {
    text-align: left;
}

.imageLayer {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 45vw;
    z-index: 1;
    pointer-events: none;
    overflow: hidden;
}

.imageLeft {
    left: 0;
}
.imageRight {
    right: 0;
}

.imageMedia {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    opacity: 0.5;
    object-position: left;
}
.flipX {
    transform: scaleX(-1);
    transform-origin: center;
}

/* Edge-fade overlay element (blurred white gradient) */
.edgeFade {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100%;
    z-index: 5;
    pointer-events: none;
}

.edgeFadeLtr {
    right: 0;
}
.edgeFadeRtl {
    left: 0;
}

.edgeFadeLtr {
    /* EN (LTR): white on right edge fading inward (right → left) */
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.98) 51%,
        rgba(255, 255, 255, 0.9) 54%,
        rgba(255, 255, 255, 0.65) 64%,
        rgba(255, 255, 255, 0) 78%
    );
}

.edgeFadeRtl {
    /* AR (RTL): white on left edge fading inward (left → right) */
    background: linear-gradient(
        to left,
        rgba(255, 255, 255, 0.98) 51%,
        rgba(255, 255, 255, 0.9) 54%,
        rgba(255, 255, 255, 0.65) 64%,
        rgba(255, 255, 255, 0) 78%
    );
}

/* On mobile, stack with a top-to-bottom white fade for legibility */
@media (max-width: 767px) {
    .imageLayer {
        left: 0;
        right: 0;
        width: 100%;
        height: 50vh;
    }
    .edgeFade {
        left: 0;
        right: 0;
        width: 100%;
        height: 50vh;
        background: linear-gradient(
            to bottom,
            rgba(255, 255, 255, 0.98) 0%,
            rgba(255, 255, 255, 0.9) 30%,
            rgba(255, 255, 255, 0.65) 50%,
            rgba(255, 255, 255, 0) 80%
        );
    }
}

/* Subtle polish */
.imageMedia {
    transition: transform 200ms ease, opacity 200ms ease;
}
.imageLayer {
    transition: opacity 200ms ease;
}
.edgeFade {
    transition: opacity 200ms ease;
}
